

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 21:51:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0014                     _SSPCON	set	20
   286  001F                     _ADCON0bits	set	31
   287  001F                     _ADCON0	set	31
   288  000B                     _INTCONbits	set	11
   289  0006                     _PORTB	set	6
   290  0005                     _PORTA	set	5
   291  0013                     _SSPBUF	set	19
   292  001E                     _ADRESH	set	30
   293  000C                     _PIR1bits	set	12
   294  0063                     _SSPIF	set	99
   295  0094                     _SSPSTAT	set	148
   296  009F                     _ADCON1bits	set	159
   297  008C                     _PIE1bits	set	140
   298  0087                     _TRISCbits	set	135
   299  0086                     _TRISB	set	134
   300  0085                     _TRISA	set	133
   301  043B                     _TRISC3	set	1083
   302  043D                     _TRISC5	set	1085
   303  0189                     _ANSELH	set	393
   304  0188                     _ANSEL	set	392
   305                           
   306                           	psect	cinit
   307  000F                     start_initialization:	
   308                           ; #config settings
   309                           
   310  000F                     __initialization:
   311                           
   312                           ; Clear objects allocated to COMMON
   313  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   314  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   315  0011                     end_of_initialization:	
   316                           ;End of C runtime variable initialization code
   317                           
   318  0011                     __end_of__initialization:
   319  0011  0183               	clrf	3
   320  0012  120A  118A  2876   	ljmp	_main	;jump to C main() function
   321                           
   322                           	psect	bssCOMMON
   323  0077                     __pbssCOMMON:
   324  0077                     _prueba:
   325  0077                     	ds	1
   326  0078                     _data_ADC:
   327  0078                     	ds	1
   328                           
   329                           	psect	cstackCOMMON
   330  0070                     __pcstackCOMMON:
   331  0070                     ?_config_adc:
   332  0070                     ?_read_ADC:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_isr:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ??_isr:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_setup:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_main:	
   345                           ; 1 bytes @ 0x0
   346                           
   347                           
   348                           ; 1 bytes @ 0x0
   349  0070                     	ds	3
   350  0073                     ??_config_adc:
   351  0073                     ?_spiInit:	
   352                           ; 1 bytes @ 0x3
   353                           
   354  0073                     ??_read_ADC:	
   355                           ; 1 bytes @ 0x3
   356                           
   357  0073                     spiInit@sDataSample:	
   358                           ; 1 bytes @ 0x3
   359                           
   360                           
   361                           ; 1 bytes @ 0x3
   362  0073                     	ds	1
   363  0074                     spiInit@sClockIdle:
   364                           
   365                           ; 1 bytes @ 0x4
   366  0074                     	ds	1
   367  0075                     spiInit@sTransmitEdge:
   368                           
   369                           ; 1 bytes @ 0x5
   370  0075                     	ds	1
   371  0076                     ??_spiInit:
   372  0076                     spiInit@sType:	
   373                           ; 1 bytes @ 0x6
   374                           
   375                           
   376                           ; 1 bytes @ 0x6
   377  0076                     	ds	1
   378  0077                     ??_setup:
   379  0077                     ??_main:	
   380                           ; 1 bytes @ 0x7
   381                           
   382                           
   383                           	psect	maintext
   384  0076                     __pmaintext:	
   385                           ; 1 bytes @ 0x7
   386 ;;
   387 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   388 ;;
   389 ;; *************** function _main *****************
   390 ;; Defined at:
   391 ;;		line 83 in file "slave_1.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, status,2, status,0, pclath, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : B00/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   405 ;;      Params:         0       0       0       0       0
   406 ;;      Locals:         0       0       0       0       0
   407 ;;      Temps:          0       0       0       0       0
   408 ;;      Totals:         0       0       0       0       0
   409 ;;Total ram usage:        0 bytes
   410 ;; Hardware stack levels required when called:    3
   411 ;; This function calls:
   412 ;;		_read_ADC
   413 ;;		_setup
   414 ;; This function is called by:
   415 ;;		Startup code after reset
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           
   420                           ;psect for function _main
   421  0076                     _main:
   422  0076                     l803:	
   423                           ;incstack = 0
   424                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   425                           
   426                           
   427                           ;slave_1.c: 84:     setup();
   428  0076  120A  118A  2015  120A  118A  	fcall	_setup
   429  007B                     l805:
   430                           
   431                           ;slave_1.c: 87:         read_ADC();
   432  007B  120A  118A  208A  120A  118A  	fcall	_read_ADC
   433                           
   434                           ;slave_1.c: 88:         SSPBUF = data_ADC;
   435  0080  0878               	movf	_data_ADC,w
   436  0081  1283               	bcf	3,5	;RP0=0, select bank0
   437  0082  1303               	bcf	3,6	;RP1=0, select bank0
   438  0083  0093               	movwf	19	;volatile
   439                           
   440                           ;slave_1.c: 89:         PORTB = data_ADC;
   441  0084  0878               	movf	_data_ADC,w
   442  0085  0086               	movwf	6	;volatile
   443  0086  287B               	goto	l805
   444  0087  120A  118A  280C   	ljmp	start
   445  008A                     __end_of_main:
   446                           
   447                           	psect	text1
   448  0015                     __ptext1:	
   449 ;; *************** function _setup *****************
   450 ;; Defined at:
   451 ;;		line 56 in file "slave_1.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg, status,2, status,0, pclath, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   465 ;;      Params:         0       0       0       0       0
   466 ;;      Locals:         0       0       0       0       0
   467 ;;      Temps:          0       0       0       0       0
   468 ;;      Totals:         0       0       0       0       0
   469 ;;Total ram usage:        0 bytes
   470 ;; Hardware stack levels used:    1
   471 ;; Hardware stack levels required when called:    2
   472 ;; This function calls:
   473 ;;		_config_adc
   474 ;;		_spiInit
   475 ;; This function is called by:
   476 ;;		_main
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           
   481                           ;psect for function _setup
   482  0015                     _setup:
   483  0015                     l773:	
   484                           ;incstack = 0
   485                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   486                           
   487                           
   488                           ;slave_1.c: 57:     ANSEL = 0x01;
   489  0015  3001               	movlw	1
   490  0016  1683               	bsf	3,5	;RP0=1, select bank3
   491  0017  1703               	bsf	3,6	;RP1=1, select bank3
   492  0018  0088               	movwf	8	;volatile
   493  0019                     l775:
   494                           
   495                           ;slave_1.c: 58:     ANSELH = 0x00;
   496  0019  0189               	clrf	9	;volatile
   497  001A                     l777:
   498                           
   499                           ;slave_1.c: 60:     TRISA = 0x21;
   500  001A  3021               	movlw	33
   501  001B  1683               	bsf	3,5	;RP0=1, select bank1
   502  001C  1303               	bcf	3,6	;RP1=0, select bank1
   503  001D  0085               	movwf	5	;volatile
   504                           
   505                           ;slave_1.c: 61:     TRISB = 0x00;
   506  001E  0186               	clrf	6	;volatile
   507                           
   508                           ;slave_1.c: 62:     PORTA = 0x00;
   509  001F  1283               	bcf	3,5	;RP0=0, select bank0
   510  0020  1303               	bcf	3,6	;RP1=0, select bank0
   511  0021  0185               	clrf	5	;volatile
   512                           
   513                           ;slave_1.c: 63:     PORTB = 0x00;
   514  0022  0186               	clrf	6	;volatile
   515  0023                     l779:
   516                           
   517                           ;slave_1.c: 65:     TRISCbits.TRISC3 = 1;
   518  0023  1683               	bsf	3,5	;RP0=1, select bank1
   519  0024  1303               	bcf	3,6	;RP1=0, select bank1
   520  0025  1587               	bsf	7,3	;volatile
   521  0026                     l781:
   522                           
   523                           ;slave_1.c: 66:     TRISCbits.TRISC4 = 1;
   524  0026  1607               	bsf	7,4	;volatile
   525  0027                     l783:
   526                           
   527                           ;slave_1.c: 67:     TRISCbits.TRISC5 = 0;
   528  0027  1287               	bcf	7,5	;volatile
   529  0028                     l785:
   530                           
   531                           ;slave_1.c: 69:     config_adc();
   532  0028  120A  118A  209C  120A  118A  	fcall	_config_adc
   533  002D                     l787:
   534                           
   535                           ;slave_1.c: 71:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   536  002D  01F3               	clrf	spiInit@sDataSample
   537  002E  01F4               	clrf	spiInit@sClockIdle
   538  002F  01F5               	clrf	spiInit@sTransmitEdge
   539  0030  3024               	movlw	36
   540  0031  120A  118A  2060  120A  118A  	fcall	_spiInit
   541  0036                     l789:
   542                           
   543                           ;slave_1.c: 73:     INTCONbits.GIE = 1;
   544  0036  178B               	bsf	11,7	;volatile
   545  0037                     l791:
   546                           
   547                           ;slave_1.c: 74:     INTCONbits.PEIE = 1;
   548  0037  170B               	bsf	11,6	;volatile
   549  0038                     l793:
   550                           
   551                           ;slave_1.c: 75:     PIE1bits.ADIE = 1;
   552  0038  1683               	bsf	3,5	;RP0=1, select bank1
   553  0039  1303               	bcf	3,6	;RP1=0, select bank1
   554  003A  170C               	bsf	12,6	;volatile
   555  003B                     l795:
   556                           
   557                           ;slave_1.c: 76:     PIR1bits.ADIF = 0;
   558  003B  1283               	bcf	3,5	;RP0=0, select bank0
   559  003C  1303               	bcf	3,6	;RP1=0, select bank0
   560  003D  130C               	bcf	12,6	;volatile
   561  003E                     l797:
   562                           
   563                           ;slave_1.c: 78:     PIE1bits.SSPIE = 1;
   564  003E  1683               	bsf	3,5	;RP0=1, select bank1
   565  003F  1303               	bcf	3,6	;RP1=0, select bank1
   566  0040  158C               	bsf	12,3	;volatile
   567  0041                     l799:
   568                           
   569                           ;slave_1.c: 79:     PIR1bits.SSPIF = 0;
   570  0041  1283               	bcf	3,5	;RP0=0, select bank0
   571  0042  1303               	bcf	3,6	;RP1=0, select bank0
   572  0043  118C               	bcf	12,3	;volatile
   573  0044                     l52:
   574  0044  0008               	return
   575  0045                     __end_of_setup:
   576                           
   577                           	psect	text2
   578  0060                     __ptext2:	
   579 ;; *************** function _spiInit *****************
   580 ;; Defined at:
   581 ;;		line 12 in file "spi.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;  sType           1    wreg     enum E1264
   584 ;;  sDataSample     1    3[COMMON] enum E1272
   585 ;;  sClockIdle      1    4[COMMON] enum E1276
   586 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   587 ;; Auto vars:     Size  Location     Type
   588 ;;  sType           1    6[COMMON] enum E1264
   589 ;; Return value:  Size  Location     Type
   590 ;;                  1    wreg      void 
   591 ;; Registers used:
   592 ;;		wreg, status,2, status,0
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   598 ;;      Params:         3       0       0       0       0
   599 ;;      Locals:         1       0       0       0       0
   600 ;;      Temps:          0       0       0       0       0
   601 ;;      Totals:         4       0       0       0       0
   602 ;;Total ram usage:        4 bytes
   603 ;; Hardware stack levels used:    1
   604 ;; Hardware stack levels required when called:    1
   605 ;; This function calls:
   606 ;;		Nothing
   607 ;; This function is called by:
   608 ;;		_setup
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612                           
   613                           ;psect for function _spiInit
   614  0060                     _spiInit:
   615                           
   616                           ;incstack = 0
   617                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   618                           ;spiInit@sType stored from wreg
   619  0060  00F6               	movwf	spiInit@sType
   620  0061                     l763:
   621                           
   622                           ;spi.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);spi.c: 13: {;spi.c: 14:     TRISC5 = 0;
   623  0061  1683               	bsf	3,5	;RP0=1, select bank1
   624  0062  1303               	bcf	3,6	;RP1=0, select bank1
   625  0063  1287               	bcf	7,5	;volatile
   626                           
   627                           ;spi.c: 15:     if(sType & 0b00000100)
   628  0064  1D76               	btfss	spiInit@sType,2
   629  0065  2867               	goto	u51
   630  0066  2868               	goto	u50
   631  0067                     u51:
   632  0067  286C               	goto	l769
   633  0068                     u50:
   634  0068                     l765:
   635                           
   636                           ;spi.c: 16:     {;spi.c: 17:         SSPSTAT = sTransmitEdge;
   637  0068  0875               	movf	spiInit@sTransmitEdge,w
   638  0069  0094               	movwf	20	;volatile
   639  006A                     l767:
   640                           
   641                           ;spi.c: 18:         TRISC3 = 1;
   642  006A  1587               	bsf	7,3	;volatile
   643                           
   644                           ;spi.c: 19:     }
   645  006B  2870               	goto	l165
   646  006C                     l769:
   647                           
   648                           ;spi.c: 21:     {;spi.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   649  006C  0873               	movf	spiInit@sDataSample,w
   650  006D  0475               	iorwf	spiInit@sTransmitEdge,w
   651  006E  0094               	movwf	20	;volatile
   652  006F                     l771:
   653                           
   654                           ;spi.c: 23:         TRISC3 = 0;
   655  006F  1187               	bcf	7,3	;volatile
   656  0070                     l165:	
   657                           ;spi.c: 24:     }
   658                           
   659                           
   660                           ;spi.c: 26:     SSPCON = sType | sClockIdle;
   661  0070  0876               	movf	spiInit@sType,w
   662  0071  0474               	iorwf	spiInit@sClockIdle,w
   663  0072  1283               	bcf	3,5	;RP0=0, select bank0
   664  0073  1303               	bcf	3,6	;RP1=0, select bank0
   665  0074  0094               	movwf	20	;volatile
   666  0075                     l166:
   667  0075  0008               	return
   668  0076                     __end_of_spiInit:
   669                           
   670                           	psect	text3
   671  009C                     __ptext3:	
   672 ;; *************** function _config_adc *****************
   673 ;; Defined at:
   674 ;;		line 93 in file "slave_1.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;		None
   677 ;; Auto vars:     Size  Location     Type
   678 ;;		None
   679 ;; Return value:  Size  Location     Type
   680 ;;                  1    wreg      void 
   681 ;; Registers used:
   682 ;;		wreg
   683 ;; Tracked objects:
   684 ;;		On entry : 0/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   688 ;;      Params:         0       0       0       0       0
   689 ;;      Locals:         0       0       0       0       0
   690 ;;      Temps:          0       0       0       0       0
   691 ;;      Totals:         0       0       0       0       0
   692 ;;Total ram usage:        0 bytes
   693 ;; Hardware stack levels used:    1
   694 ;; Hardware stack levels required when called:    1
   695 ;; This function calls:
   696 ;;		Nothing
   697 ;; This function is called by:
   698 ;;		_setup
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           
   703                           ;psect for function _config_adc
   704  009C                     _config_adc:
   705  009C                     l693:	
   706                           ;incstack = 0
   707                           ; Regs used in _config_adc: [wreg]
   708                           
   709                           
   710                           ;slave_1.c: 94:     ADCON0 = 0x41;
   711  009C  3041               	movlw	65
   712  009D  1283               	bcf	3,5	;RP0=0, select bank0
   713  009E  1303               	bcf	3,6	;RP1=0, select bank0
   714  009F  009F               	movwf	31	;volatile
   715  00A0                     l695:
   716                           
   717                           ;slave_1.c: 95:     ADCON1bits.ADFM = 0;
   718  00A0  1683               	bsf	3,5	;RP0=1, select bank1
   719  00A1  1303               	bcf	3,6	;RP1=0, select bank1
   720  00A2  139F               	bcf	31,7	;volatile
   721  00A3                     l697:
   722                           
   723                           ;slave_1.c: 96:     ADCON1bits.VCFG0 = 0;
   724  00A3  121F               	bcf	31,4	;volatile
   725  00A4                     l699:
   726                           
   727                           ;slave_1.c: 97:     ADCON1bits.VCFG1 = 0;
   728  00A4  129F               	bcf	31,5	;volatile
   729  00A5                     l63:
   730  00A5  0008               	return
   731  00A6                     __end_of_config_adc:
   732                           
   733                           	psect	text4
   734  008A                     __ptext4:	
   735 ;; *************** function _read_ADC *****************
   736 ;; Defined at:
   737 ;;		line 101 in file "slave_1.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;		None
   740 ;; Auto vars:     Size  Location     Type
   741 ;;		None
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		None
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   751 ;;      Params:         0       0       0       0       0
   752 ;;      Locals:         0       0       0       0       0
   753 ;;      Temps:          0       0       0       0       0
   754 ;;      Totals:         0       0       0       0       0
   755 ;;Total ram usage:        0 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; Hardware stack levels required when called:    1
   758 ;; This function calls:
   759 ;;		Nothing
   760 ;; This function is called by:
   761 ;;		_main
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           
   766                           ;psect for function _read_ADC
   767  008A                     _read_ADC:
   768  008A                     l743:	
   769                           ;incstack = 0
   770                           ; Regs used in _read_ADC: []
   771                           
   772                           
   773                           ;slave_1.c: 102:     if (ADCON0bits.GO_DONE == 0) {
   774  008A  1283               	bcf	3,5	;RP0=0, select bank0
   775  008B  1303               	bcf	3,6	;RP1=0, select bank0
   776  008C  189F               	btfsc	31,1	;volatile
   777  008D  288F               	goto	u21
   778  008E  2890               	goto	u20
   779  008F                     u21:
   780  008F  289B               	goto	l67
   781  0090                     u20:
   782  0090                     l745:
   783  0090  0000               	nop	;# 
   784  0091  0000               	nop	;# 
   785  0092  0000               	nop	;# 
   786  0093  0000               	nop	;# 
   787  0094  0000               	nop	;# 
   788  0095  0000               	nop	;# 
   789  0096  0000               	nop	;# 
   790  0097  0000               	nop	;# 
   791                           
   792                           ;slave_1.c: 111:         ADCON0bits.GO_DONE = 1;
   793  0098  1283               	bcf	3,5	;RP0=0, select bank0
   794  0099  1303               	bcf	3,6	;RP1=0, select bank0
   795  009A  149F               	bsf	31,1	;volatile
   796  009B                     l67:
   797  009B  0008               	return
   798  009C                     __end_of_read_ADC:
   799                           
   800                           	psect	text5
   801  0045                     __ptext5:	
   802 ;; *************** function _isr *****************
   803 ;; Defined at:
   804 ;;		line 42 in file "slave_1.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;		None
   807 ;; Auto vars:     Size  Location     Type
   808 ;;		None
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		wreg
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   818 ;;      Params:         0       0       0       0       0
   819 ;;      Locals:         0       0       0       0       0
   820 ;;      Temps:          3       0       0       0       0
   821 ;;      Totals:         3       0       0       0       0
   822 ;;Total ram usage:        3 bytes
   823 ;; Hardware stack levels used:    1
   824 ;; This function calls:
   825 ;;		Nothing
   826 ;; This function is called by:
   827 ;;		Interrupt level 1
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           
   832                           ;psect for function _isr
   833  0045                     _isr:
   834  0045                     i1l747:
   835                           
   836                           ;slave_1.c: 44:     if (PIR1bits.ADIF) {
   837  0045  1283               	bcf	3,5	;RP0=0, select bank0
   838  0046  1303               	bcf	3,6	;RP1=0, select bank0
   839  0047  1F0C               	btfss	12,6	;volatile
   840  0048  284A               	goto	u3_21
   841  0049  284B               	goto	u3_20
   842  004A                     u3_21:
   843  004A  2850               	goto	i1l753
   844  004B                     u3_20:
   845  004B                     i1l749:
   846                           
   847                           ;slave_1.c: 45:         PIR1bits.ADIF = 0;
   848  004B  130C               	bcf	12,6	;volatile
   849  004C                     i1l751:
   850                           
   851                           ;slave_1.c: 46:         data_ADC = ADRESH;
   852  004C  081E               	movf	30,w	;volatile
   853  004D  00F0               	movwf	??_isr
   854  004E  0870               	movf	??_isr,w
   855  004F  00F8               	movwf	_data_ADC
   856  0050                     i1l753:
   857                           
   858                           ;slave_1.c: 49:     if (SSPIF == 1) {
   859  0050  1D8C               	btfss	12,3	;volatile
   860  0051  2853               	goto	u4_21
   861  0052  2854               	goto	u4_20
   862  0053                     u4_21:
   863  0053  2859               	goto	i1l49
   864  0054                     u4_20:
   865  0054                     i1l755:
   866                           
   867                           ;slave_1.c: 50:         prueba = SSPBUF;
   868  0054  0813               	movf	19,w	;volatile
   869  0055  00F0               	movwf	??_isr
   870  0056  0870               	movf	??_isr,w
   871  0057  00F7               	movwf	_prueba
   872  0058                     i1l757:
   873                           
   874                           ;slave_1.c: 51:         SSPIF = 0;
   875  0058  118C               	bcf	12,3	;volatile
   876  0059                     i1l49:
   877  0059  0872               	movf	??_isr+2,w
   878  005A  008A               	movwf	10
   879  005B  0E71               	swapf	??_isr+1,w
   880  005C  0083               	movwf	3
   881  005D  0EFE               	swapf	btemp,f
   882  005E  0E7E               	swapf	btemp,w
   883  005F  0009               	retfie
   884  0060                     __end_of_isr:
   885  007E                     btemp	set	126	;btemp
   886  007E                     wtemp0	set	126
   887                           
   888                           	psect	intentry
   889  0004                     __pintentry:	
   890                           ;incstack = 0
   891                           ; Regs used in _isr: [wreg]
   892                           
   893  0004                     interrupt_function:
   894  007E                     saved_w	set	btemp
   895  0004  00FE               	movwf	btemp
   896  0005  0E03               	swapf	3,w
   897  0006  00F1               	movwf	??_isr+1
   898  0007  080A               	movf	10,w
   899  0008  00F2               	movwf	??_isr+2
   900  0009  120A  118A  2845   	ljmp	_isr
   901                           
   902                           	psect	config
   903                           
   904                           ;Config register CONFIG1 @ 0x2007
   905                           ;	Oscillator Selection bits
   906                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   907                           ;	Watchdog Timer Enable bit
   908                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   909                           ;	Power-up Timer Enable bit
   910                           ;	PWRTE = OFF, PWRT disabled
   911                           ;	RE3/MCLR pin function select bit
   912                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   913                           ;	Code Protection bit
   914                           ;	CP = OFF, Program memory code protection is disabled
   915                           ;	Data Code Protection bit
   916                           ;	CPD = OFF, Data memory code protection is disabled
   917                           ;	Brown Out Reset Selection bits
   918                           ;	BOREN = OFF, BOR disabled
   919                           ;	Internal External Switchover bit
   920                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   921                           ;	Fail-Safe Clock Monitor Enabled bit
   922                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   923                           ;	Low Voltage Programming Enable bit
   924                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   925                           ;	In-Circuit Debugger Mode bit
   926                           ;	DEBUG = 0x1, unprogrammed default
   927  2007                     	org	8199
   928  2007  20D4               	dw	8404
   929                           
   930                           ;Config register CONFIG2 @ 0x2008
   931                           ;	Brown-out Reset Selection bit
   932                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   933                           ;	Flash Program Memory Self Write Enable bits
   934                           ;	WRT = OFF, Write protection off
   935  2008                     	org	8200
   936  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     360
                           _read_ADC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                         _config_adc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _config_adc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _read_ADC
   _setup
     _config_adc
     _spiInit

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 21:51:55 2021

                     l52 0044                       l63 00A5                       l67 009B  
                     u20 0090                       u21 008F                       u50 0068  
                     u51 0067                      l165 0070                      l166 0075  
                    l803 0076                      l805 007B                      l743 008A  
                    l745 0090                      l771 006F                      l763 0061  
                    l693 009C                      l765 0068                      l781 0026  
                    l773 0015                      l695 00A0                      l767 006A  
                    l791 0037                      l783 0027                      l775 0019  
                    l697 00A3                      l769 006C                      l793 0038  
                    l785 0028                      l777 001A                      l699 00A4  
                    l795 003B                      l787 002D                      l779 0023  
                    l797 003E                      l789 0036                      l799 0041  
                    _isr 0045                     ?_isr 0070                     i1l49 0059  
                   u3_20 004B                     u3_21 004A                     u4_20 0054  
                   u4_21 0053                     _main 0076                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l751 004C                    i1l753 0050  
                  i1l755 0054                    i1l747 0045                    i1l757 0058  
                  i1l749 004B                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    _SSPIF 0063  
                  _setup 0015                    pclath 000A          __end_of_spiInit 0076  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 008A                   ??_main 0077                   _ADCON0 001F  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPBUF 0013  
                 _SSPCON 0014         __end_of_read_ADC 009C                   _prueba 0077  
                 saved_w 007E                ??_spiInit 0076  __end_of__initialization 0011  
         __pcstackCOMMON 0070            __end_of_setup 0045                  ??_setup 0077  
             __pmaintext 0076               __pintentry 0004               _config_adc 009C  
                _SSPSTAT 0094                ?_read_ADC 0070                  __ptext1 0015  
                __ptext2 0060                  __ptext3 009C                  __ptext4 008A  
                __ptext5 0045             __size_of_isr 001B                  _spiInit 0060  
   end_of_initialization 0011               ??_read_ADC 0073              ?_config_adc 0070  
              _TRISCbits 0087      start_initialization 000F              __end_of_isr 0060  
    __size_of_config_adc 000A              __pbssCOMMON 0077                ___latbits 0002  
      __size_of_read_ADC 0012                 ?_spiInit 0073           __size_of_setup 0030  
   spiInit@sTransmitEdge 0075        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0073                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F             ??_config_adc 0073       __end_of_config_adc 00A6  
               _data_ADC 0078         __size_of_spiInit 0016                 _read_ADC 008A  
          __size_of_main 0014             spiInit@sType 0076        spiInit@sClockIdle 0074  
             _INTCONbits 000B                 intlevel1 0000  
